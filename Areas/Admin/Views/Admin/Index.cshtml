@{
    ViewData["Title"] = "Thống kê";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="row mb-4 text-center">
    <div class="col-md-3">
        <div class="card shadow-sm border-primary">
            <div class="card-body">
                <h5 class="card-title text-primary">Người dùng</h5>
                <p class="card-text fs-4">@ViewBag.TotalUsers</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card shadow-sm border-success">
            <div class="card-body">
                <h5 class="card-title text-success">Sản phẩm</h5>
                <p class="card-text fs-4">@ViewBag.TotalProducts</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card shadow-sm border-warning">
            <div class="card-body">
                <h5 class="card-title text-warning">Đơn hàng</h5>
                <p class="card-text fs-4">@ViewBag.TotalOrders</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card shadow-sm border-danger">
            <div class="card-body">
                <h5 class="card-title text-danger">Doanh thu</h5>
                <p class="card-text fs-4">@ViewBag.TotalRevenue.ToString("N0") VNĐ</p>
            </div>
        </div>
    </div>
</div>

<h3>Biểu đồ doanh thu theo tháng</h3>
<div style="max-width: auto; height: 700px;">
    <canvas id="revenueChart"></canvas>
</div>


@section Scripts {
    @using System.Text.Json
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const labels = @Html.Raw(JsonSerializer.Serialize(ViewBag.RevenueLabels));
            const data = @Html.Raw(JsonSerializer.Serialize(ViewBag.RevenueData));

            const maxRevenue = Math.max(...data);
            const threshold = maxRevenue * 0.1;

            const backgroundColors = data.map(value => {
                if (value === maxRevenue) return 'rgba(40, 167, 69, 0.7)'; // Xanh lá
                if (value < threshold) return 'rgba(139, 0, 0, 0.85)';     // Đỏ
                return 'rgba(54, 162, 235, 0.7)';                          // Xanh dương
            });

            const borderColors = data.map(value => {
                if (value === maxRevenue) return 'rgba(40, 167, 69, 1)';
                if (value < threshold) return 'rgba(220, 53, 69, 1)';
                return 'rgba(54, 162, 235, 1)';
            });

            const ctx = document.getElementById('revenueChart').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Doanh thu (VNĐ)',
                        data: data,
                        backgroundColor: backgroundColors,
                        borderColor: borderColors,
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function (value) {
                                    return value.toLocaleString() + " VNĐ";
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
}


